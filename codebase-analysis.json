{
  "pages": [],
  "apiRoutes": [],
  "components": [],
  "hooks": [],
  "utils": [],
  "services": [],
  "types": [],
  "constants": [],
  "middleware": [],
  "schemas": [],
  "database": {},
  "config": [
    {
      "path": "src\\app\\api\\achievements\\route.ts",
      "type": "other",
      "lines": 61,
      "size": 1731,
      "imports": [
        "next/server",
        "@/services/achievementService",
        "@/lib/prisma",
        "@/middleware/apiWrapper"
      ],
      "exports": [
        {
          "name": "GET",
          "type": "named"
        },
        {
          "name": "POST",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "getAchievementsHandler",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "createAchievementHandler",
          "type": "function",
          "async": true,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [
        {
          "name": "userId",
          "exported": false
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, @/services/achievementService, @/middleware/apiWrapper"
        }
      ]
    },
    {
      "path": "src\\app\\api\\competitions\\route.ts",
      "type": "other",
      "lines": 13,
      "size": 444,
      "imports": [
        "next/server",
        "@/lib/dynamic-data"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "GET"
      ],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, @/lib/dynamic-data"
        }
      ]
    },
    {
      "path": "src\\app\\api\\daily-progress\\route.ts",
      "type": "other",
      "lines": 77,
      "size": 1951,
      "imports": [
        "next/server",
        "@/lib/prisma",
        "@/middleware/apiWrapper"
      ],
      "exports": [
        {
          "name": "GET",
          "type": "named"
        },
        {
          "name": "POST",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "getDailyProgressHandler",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "createDailyProgressHandler",
          "type": "function",
          "async": true,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [
        {
          "name": "userId",
          "exported": false
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, @/middleware/apiWrapper"
        }
      ]
    },
    {
      "path": "src\\app\\api\\errors\\route.ts",
      "type": "other",
      "lines": 293,
      "size": 7610,
      "imports": [
        "next/server",
        "@/lib/prisma",
        "zod"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "POST",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "PUT",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        },
        {
          "name": "POST",
          "exported": false
        },
        {
          "name": "PUT",
          "exported": false
        }
      ],
      "hooks": [
        {
          "name": "user",
          "exported": false
        }
      ],
      "apiMethods": [
        "GET",
        "POST",
        "PUT"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, zod"
        }
      ]
    },
    {
      "path": "src\\app\\api\\exams\\recurring\\route.ts",
      "type": "other",
      "lines": 127,
      "size": 4224,
      "imports": [
        "next/server",
        "@/lib/prisma"
      ],
      "exports": [],
      "functions": [
        {
          "name": "POST",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "POST",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "POST"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server"
        }
      ]
    },
    {
      "path": "src\\app\\api\\exams\\route.ts",
      "type": "other",
      "lines": 120,
      "size": 3397,
      "imports": [
        "next/server",
        "@/lib/prisma"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "POST",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        },
        {
          "name": "POST",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "GET",
        "POST"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server"
        }
      ]
    },
    {
      "path": "src\\app\\api\\exams\\[id]\\route.ts",
      "type": "other",
      "lines": 148,
      "size": 4488,
      "imports": [
        "next/server",
        "@/lib/prisma"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "PUT",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "DELETE",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        },
        {
          "name": "PUT",
          "exported": false
        },
        {
          "name": "DELETE",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "GET",
        "PUT",
        "DELETE"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server"
        }
      ]
    },
    {
      "path": "src\\app\\api\\export-library\\route.ts",
      "type": "other",
      "lines": 144,
      "size": 4321,
      "imports": [
        "next/server",
        "@/lib/prisma"
      ],
      "exports": [
        {
          "name": "exportData",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "GET"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server"
        }
      ]
    },
    {
      "path": "src\\app\\api\\failed-questions\\route.ts",
      "type": "other",
      "lines": 233,
      "size": 7413,
      "imports": [
        "next/server",
        "@/lib/prisma"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "POST",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        },
        {
          "name": "POST",
          "exported": false
        }
      ],
      "hooks": [
        {
          "name": "userId",
          "exported": false
        }
      ],
      "apiMethods": [
        "GET",
        "POST"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "type-safety",
          "description": "Excessive use of 'any' type (6 occurrences)"
        },
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server"
        }
      ]
    },
    {
      "path": "src\\app\\api\\practice-sessions\\route.ts",
      "type": "other",
      "lines": 46,
      "size": 1280,
      "imports": [
        "next/server",
        "@/lib/prisma",
        "@/middleware/apiWrapper"
      ],
      "exports": [
        {
          "name": "GET",
          "type": "named"
        },
        {
          "name": "POST",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "getPracticeSessionsHandler",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "createPracticeSessionHandler",
          "type": "function",
          "async": true,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [
        {
          "name": "userId",
          "exported": false
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, @/middleware/apiWrapper"
        }
      ]
    },
    {
      "path": "src\\app\\api\\progress\\route.ts",
      "type": "other",
      "lines": 109,
      "size": 3000,
      "imports": [
        "next/server",
        "@/services/progressService",
        "@/services/achievementService",
        "@/lib/prisma"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "POST",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "DELETE",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        },
        {
          "name": "POST",
          "exported": false
        },
        {
          "name": "DELETE",
          "exported": false
        }
      ],
      "hooks": [
        {
          "name": "userId",
          "exported": false
        },
        {
          "name": "userId",
          "exported": false
        }
      ],
      "apiMethods": [
        "GET",
        "POST",
        "DELETE"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, @/services/progressService, @/services/achievementService"
        }
      ]
    },
    {
      "path": "src\\app\\api\\quality\\route.ts",
      "type": "other",
      "lines": 385,
      "size": 10533,
      "imports": [
        "next/server",
        "@/lib/prisma",
        "@/services/qualityValidationService"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "POST",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "handleDashboardRequest",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "handleMetricsRequest",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "handleBulkMetricsRequest",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "handleQualityReport",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "handleValidateQuestion",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "handleBulkValidateQuestions",
          "type": "function",
          "async": true,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        },
        {
          "name": "POST",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "GET",
        "POST"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "type-safety",
          "description": "Excessive use of 'any' type (4 occurrences)"
        },
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server"
        }
      ]
    },
    {
      "path": "src\\app\\api\\question-counts\\route.ts",
      "type": "other",
      "lines": 16,
      "size": 440,
      "imports": [
        "next/server",
        "@/services/questionService"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "GET"
      ],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, @/services/questionService"
        }
      ]
    },
    {
      "path": "src\\app\\api\\questions\\exam\\[examType]\\route.ts",
      "type": "other",
      "lines": 118,
      "size": 3393,
      "imports": [
        "next/server",
        "@/lib/prisma",
        "@/constants/examTypes",
        "@/utils/questionTransforms"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "DELETE",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "PUT",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        },
        {
          "name": "DELETE",
          "exported": false
        },
        {
          "name": "PUT",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "GET",
        "DELETE",
        "PUT"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, @/constants/examTypes, @/utils/questionTransforms"
        }
      ]
    },
    {
      "path": "src\\app\\api\\questions\\exam\\[examType]\\years\\route.ts",
      "type": "other",
      "lines": 24,
      "size": 760,
      "imports": [
        "next/server",
        "@/services/questionService",
        "@/constants/examTypes"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "GET"
      ],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, @/services/questionService, @/constants/examTypes"
        }
      ]
    },
    {
      "path": "src\\app\\api\\questions\\route.ts",
      "type": "other",
      "lines": 94,
      "size": 2932,
      "imports": [
        "next/server",
        "@/lib/prisma",
        "@/middleware/apiWrapper",
        "@/schemas/validation",
        "@/utils/nullSafety"
      ],
      "exports": [
        {
          "name": "GET",
          "type": "named"
        },
        {
          "name": "POST",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "getQuestionsHandler",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "createQuestionHandler",
          "type": "function",
          "async": true,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, @/middleware/apiWrapper, @/schemas/validation, @/utils/nullSafety"
        }
      ]
    },
    {
      "path": "src\\app\\api\\questions\\smart-selection\\route.ts",
      "type": "other",
      "lines": 105,
      "size": 2968,
      "imports": [
        "next/server",
        "@/services/questionSelectionService"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "POST",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        },
        {
          "name": "POST",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "GET",
        "POST"
      ],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, @/services/questionSelectionService"
        }
      ]
    },
    {
      "path": "src\\app\\api\\questions\\[id]\\route.ts",
      "type": "other",
      "lines": 96,
      "size": 2177,
      "imports": [
        "next/server",
        "@/lib/prisma"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "PUT",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "DELETE",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        },
        {
          "name": "PUT",
          "exported": false
        },
        {
          "name": "DELETE",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "GET",
        "PUT",
        "DELETE"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server"
        }
      ]
    },
    {
      "path": "src\\app\\api\\stats\\route.ts",
      "type": "other",
      "lines": 171,
      "size": 4760,
      "imports": [
        "next/server",
        "@/lib/prisma"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "calculateStreak",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "getWeeklyProgress",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "enrichTopicStats",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "enrichCompetitionStats",
          "type": "function",
          "async": true,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        }
      ],
      "hooks": [
        {
          "name": "userId",
          "exported": false
        }
      ],
      "apiMethods": [
        "GET"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server"
        }
      ]
    },
    {
      "path": "src\\app\\api\\topic-performance\\route.ts",
      "type": "other",
      "lines": 88,
      "size": 2564,
      "imports": [
        "next/server",
        "@/lib/prisma",
        "@/middleware/apiWrapper"
      ],
      "exports": [
        {
          "name": "GET",
          "type": "named"
        },
        {
          "name": "POST",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "getTopicPerformanceHandler",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "updateTopicPerformanceHandler",
          "type": "function",
          "async": true,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [
        {
          "name": "userId",
          "exported": false
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, @/middleware/apiWrapper"
        }
      ]
    },
    {
      "path": "src\\app\\api\\topics\\route.ts",
      "type": "other",
      "lines": 31,
      "size": 669,
      "imports": [
        "next/server",
        "@/lib/prisma"
      ],
      "exports": [],
      "functions": [
        {
          "name": "GET",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "GET",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "GET"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server"
        }
      ]
    },
    {
      "path": "src\\app\\api\\upload\\route.ts",
      "type": "other",
      "lines": 201,
      "size": 6921,
      "imports": [
        "next/server",
        "@/lib/prisma",
        "@/lib/document-processor"
      ],
      "exports": [],
      "functions": [
        {
          "name": "POST",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "parseQuestions",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "createQuestionObject",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "getTimeLimit",
          "type": "function",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "POST",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "POST"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, @/lib/document-processor"
        }
      ]
    },
    {
      "path": "src\\app\\api\\user-attempts\\route.ts",
      "type": "other",
      "lines": 17,
      "size": 558,
      "imports": [
        "next/server",
        "@/lib/prisma"
      ],
      "exports": [],
      "functions": [
        {
          "name": "DELETE",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "DELETE",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "DELETE"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server"
        }
      ]
    },
    {
      "path": "src\\app\\api\\user-attempts\\[id]\\route.ts",
      "type": "other",
      "lines": 22,
      "size": 614,
      "imports": [
        "next/server",
        "@/lib/prisma"
      ],
      "exports": [],
      "functions": [
        {
          "name": "DELETE",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "DELETE",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [
        "DELETE"
      ],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server"
        }
      ]
    },
    {
      "path": "src\\app\\exams\\page.tsx",
      "type": "other",
      "lines": 85,
      "size": 2132,
      "imports": [
        "react",
        "@/components/exams/ExamSchedule",
        "@/components/exams/ExamForm",
        "@/components/ui/button",
        "@/types",
        "next/link"
      ],
      "exports": [
        {
          "name": "ExamsPage",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "ExamsPage",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "handleAddExam",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleEditExam",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleSave",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleCancel",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "ExamsPage",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react, @/components/ui/button, @/types, next/link"
        }
      ]
    },
    {
      "path": "src\\app\\layout.tsx",
      "type": "other",
      "lines": 34,
      "size": 931,
      "imports": [
        "next/font/google",
        "@/components/ErrorBoundary",
        "@/components/ui/navigation"
      ],
      "exports": [
        {
          "name": "metadata",
          "type": "named"
        },
        {
          "name": "RootLayout",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "RootLayout",
          "type": "function",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "RootLayout",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/font/google, @/components/ui/navigation"
        }
      ]
    },
    {
      "path": "src\\app\\library\\page.tsx",
      "type": "other",
      "lines": 375,
      "size": 13878,
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/select",
        "lucide-react",
        "next/link",
        "@/lib/prisma"
      ],
      "exports": [
        {
          "name": "async",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "getLibraryData",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "getDifficultyBadge",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "truncateText",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "calculateSuccessRate",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "LibraryPage",
          "type": "function",
          "async": true,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "LibraryPage",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/input, @/components/ui/badge, lucide-react, next/link"
        }
      ]
    },
    {
      "path": "src\\app\\page.tsx",
      "type": "other",
      "lines": 350,
      "size": 12775,
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react",
        "next/link",
        "@/lib/prisma",
        "@/components/RecentActivity"
      ],
      "exports": [
        {
          "name": "async",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "calculateStreak",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "getStats",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "HomePage",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "getExamIcon",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "HomePage",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, lucide-react, next/link"
        }
      ]
    },
    {
      "path": "src\\app\\practice\\amc8\\simulation\\page.tsx",
      "type": "other",
      "lines": 396,
      "size": 13863,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "lucide-react",
        "next/link"
      ],
      "exports": [
        {
          "name": "AMC8SimulationPage",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "AMC8SimulationPage",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "fetchSimulationQuestions",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "startSimulation",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "selectAnswer",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "nextQuestion",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "previousQuestion",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "finishSimulation",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "formatTime",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "calculateScore",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "AMC8SimulationPage",
          "exported": false
        }
      ],
      "hooks": [
        {
          "name": "userAnswer",
          "exported": false
        },
        {
          "name": "userAnswer",
          "exported": false
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/badge, lucide-react, next/link"
        }
      ]
    },
    {
      "path": "src\\app\\practice\\page.tsx",
      "type": "other",
      "lines": 378,
      "size": 14868,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "@/components/ui/loading",
        "@/components/ui/error-display",
        "next/link"
      ],
      "exports": [
        {
          "name": "PracticePage",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "PracticePage",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "fetchQuestionCounts",
          "type": "arrow",
          "async": true,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "PracticePage",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/badge, lucide-react, @/components/ui/error-display, next/link"
        }
      ]
    },
    {
      "path": "src\\app\\practice\\quick\\page.tsx",
      "type": "other",
      "lines": 232,
      "size": 8587,
      "imports": [
        "react",
        "@/components/practice/PracticeSession",
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react",
        "@/hooks/useLocalStorage",
        "@/types",
        "@/utils/questionTransforms"
      ],
      "exports": [
        {
          "name": "QuickPracticePage",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "QuickPracticePage",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "fetchQuestions",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "handleSessionComplete",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "QuickPracticePage",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect",
        "useMemo"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, lucide-react, @/hooks/useLocalStorage, @/types, @/utils/questionTransforms"
        }
      ]
    },
    {
      "path": "src\\app\\practice\\retry\\page.tsx",
      "type": "other",
      "lines": 180,
      "size": 6789,
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "next/link",
        "@/components/practice/RetrySessionManager"
      ],
      "exports": [
        {
          "name": "async",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "getFailedQuestionsData",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "RetryPage",
          "type": "function",
          "async": true,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "RetryPage",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/badge, lucide-react, next/link"
        }
      ]
    },
    {
      "path": "src\\app\\practice\\session\\page.tsx",
      "type": "other",
      "lines": 278,
      "size": 10280,
      "imports": [
        "react",
        "next/navigation",
        "@/components/practice/PracticeSession",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "@/hooks/useLocalStorage",
        "@/types",
        "@/utils/questionTransforms"
      ],
      "exports": [
        {
          "name": "TopicSessionPage",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "TopicSessionPage",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "fetchQuestions",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "handleSessionComplete",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "TopicSessionPage",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect",
        "useMemo"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/navigation, @/components/ui/card, @/components/ui/button, @/components/ui/badge, lucide-react, @/hooks/useLocalStorage, @/types, @/utils/questionTransforms"
        }
      ]
    },
    {
      "path": "src\\app\\practice\\timed\\page.tsx",
      "type": "other",
      "lines": 340,
      "size": 13186,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "lucide-react",
        "next/link",
        "@/components/practice/TimedChallenge"
      ],
      "exports": [
        {
          "name": "TimedChallengePage",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "TimedChallengePage",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "startChallenge",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleChallengeComplete",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleBackToSetup",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "CHALLENGE_PRESETS",
          "exported": false
        },
        {
          "name": "TimedChallengePage",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/badge, lucide-react, next/link"
        }
      ]
    },
    {
      "path": "src\\app\\practice\\topics\\page.tsx",
      "type": "other",
      "lines": 242,
      "size": 8975,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "lucide-react",
        "@/components/ui/loading",
        "@/components/ui/error-display",
        "next/link"
      ],
      "exports": [
        {
          "name": "TopicPracticePage",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "TopicPracticePage",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "fetchTopics",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "handleStartPractice",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getTopicDescription",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "TopicPracticePage",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/badge, lucide-react, @/components/ui/error-display, next/link"
        }
      ]
    },
    {
      "path": "src\\app\\practice\\weak-areas\\page.tsx",
      "type": "other",
      "lines": 109,
      "size": 4041,
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react",
        "next/link"
      ],
      "exports": [
        {
          "name": "WeakAreasPracticePage",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "WeakAreasPracticePage",
          "type": "function",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "WeakAreasPracticePage",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, lucide-react, next/link"
        }
      ]
    },
    {
      "path": "src\\app\\practice\\[examType]\\page.tsx",
      "type": "other",
      "lines": 31,
      "size": 698,
      "imports": [
        "@/components/practice/ExamPractice",
        "@/constants/examTypes",
        "next/navigation"
      ],
      "exports": [
        {
          "name": "generateStaticParams",
          "type": "named"
        },
        {
          "name": "ExamTypePracticePage",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "ExamTypePracticePage",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "generateStaticParams",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "ExamTypePracticePage",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/constants/examTypes, next/navigation"
        }
      ]
    },
    {
      "path": "src\\app\\progress\\page.tsx",
      "type": "other",
      "lines": 45,
      "size": 1372,
      "imports": [
        "@/components/ui/button",
        "next/link",
        "@/components/analytics/PerformanceDashboard",
        "@/components/achievements/AchievementDisplay"
      ],
      "exports": [
        {
          "name": "ProgressPage",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "ProgressPage",
          "type": "function",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "ProgressPage",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/button, next/link"
        }
      ]
    },
    {
      "path": "src\\app\\upload\\page.tsx",
      "type": "other",
      "lines": 352,
      "size": 13025,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "lucide-react",
        "next/link",
        "@/components/ui/alert"
      ],
      "exports": [
        {
          "name": "UploadPage",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "UploadPage",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "fetchExamTypes",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "handleFileChange",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleSubmit",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "getFileIcon",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "UploadPage",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/textarea, lucide-react, next/link, @/components/ui/alert"
        }
      ]
    },
    {
      "path": "src\\components\\achievements\\AchievementDisplay.tsx",
      "type": "other",
      "lines": 216,
      "size": 7616,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "lucide-react"
      ],
      "exports": [
        {
          "name": "AchievementDisplay",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "AchievementDisplay",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "fetchAchievements",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "getCategoryIcon",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getCategoryColor",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "AchievementDisplay",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/progress, lucide-react"
        }
      ]
    },
    {
      "path": "src\\components\\analytics\\PerformanceDashboard.tsx",
      "type": "other",
      "lines": 433,
      "size": 16281,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "lucide-react",
        "@/components/ui/loading",
        "@/components/ui/error-display",
        "recharts"
      ],
      "exports": [
        {
          "name": "PerformanceDashboard",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "PerformanceDashboard",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "fetchPerformanceData",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "getTrendIcon",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "PerformanceDashboard",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/badge, @/components/ui/button, @/components/ui/select, @/components/ui/tabs, lucide-react, @/components/ui/error-display, recharts"
        }
      ]
    },
    {
      "path": "src\\components\\analytics\\ProgressChart.tsx",
      "type": "other",
      "lines": 97,
      "size": 3033,
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "lucide-react"
      ],
      "exports": [
        {
          "name": "ProgressChart",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "ProgressChart",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "getTrendIcon",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getTrendColor",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getBadgeVariant",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getBadgeLabel",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "ProgressChart",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/badge, @/components/ui/progress, lucide-react"
        }
      ]
    },
    {
      "path": "src\\components\\analytics\\StatCard.tsx",
      "type": "other",
      "lines": 48,
      "size": 1250,
      "imports": [
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        {
          "name": "StatCard",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "StatCard",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "StatCard",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, lucide-react"
        }
      ]
    },
    {
      "path": "src\\components\\analytics\\WeeklyActivity.tsx",
      "type": "other",
      "lines": 114,
      "size": 4375,
      "imports": [
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        {
          "name": "WeeklyActivity",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "WeeklyActivity",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "getBarHeight",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getAccuracyColor",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "WeeklyActivity",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, lucide-react"
        }
      ]
    },
    {
      "path": "src\\components\\ErrorBoundary.tsx",
      "type": "other",
      "lines": 147,
      "size": 4442,
      "imports": [
        "react",
        "@/types",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        {
          "name": "ErrorBoundary",
          "type": "default"
        }
      ],
      "functions": [],
      "components": [
        {
          "name": "DefaultErrorFallback",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react, @/types, @/components/ui/button, @/components/ui/card"
        }
      ]
    },
    {
      "path": "src\\components\\ErrorReport.tsx",
      "type": "other",
      "lines": 219,
      "size": 7625,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/components/ui/input",
        "@/components/ui/label",
        "lucide-react"
      ],
      "exports": [
        {
          "name": "ErrorReport",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "ErrorReport",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "handleSubmit",
          "type": "arrow",
          "async": true,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "ErrorReport",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/select, @/components/ui/textarea, @/components/ui/input, lucide-react"
        }
      ]
    },
    {
      "path": "src\\components\\exams\\ExamForm.tsx",
      "type": "other",
      "lines": 536,
      "size": 20558,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "lucide-react",
        "@/types"
      ],
      "exports": [
        {
          "name": "ExamForm",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "ExamForm",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "fetchExamTypes",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "handleSubmit",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "handleChange",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "ExamForm",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, lucide-react"
        }
      ]
    },
    {
      "path": "src\\components\\exams\\ExamSchedule.tsx",
      "type": "other",
      "lines": 732,
      "size": 28942,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/lib/dynamic-data",
        "@/types"
      ],
      "exports": [
        {
          "name": "ExamSchedule",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "ExamSchedule",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "CompactExamView",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "ExamCard",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "fetchExams",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "deleteExam",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "getStatusColor",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "formatDate",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "formatTime",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getDaysUntil",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getStatusColor",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "formatDateCard",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "formatTimeCard",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "ExamSchedule",
          "exported": false
        },
        {
          "name": "CompactExamView",
          "exported": false
        },
        {
          "name": "ExamCard",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/badge, lucide-react, @/components/ui/input, @/components/ui/select, @/lib/dynamic-data, @/types"
        }
      ]
    },
    {
      "path": "src\\components\\LazyComponents.tsx",
      "type": "other",
      "lines": 26,
      "size": 928,
      "imports": [
        "react"
      ],
      "exports": [
        {
          "name": "LazyPracticeSession",
          "type": "named"
        },
        {
          "name": "LazyAnalyticsDashboard",
          "type": "named"
        },
        {
          "name": "LazyQualityDashboard",
          "type": "named"
        },
        {
          "name": "LazyExamForm",
          "type": "named"
        },
        {
          "name": "LazyDiagramDisplay",
          "type": "named"
        },
        {
          "name": "LazySolutionVisualizer",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react"
        }
      ]
    },
    {
      "path": "src\\components\\math\\MathInput.tsx",
      "type": "other",
      "lines": 196,
      "size": 5757,
      "imports": [
        "react",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/card",
        "./MathRenderer",
        "lucide-react"
      ],
      "exports": [
        {
          "name": "MathInput",
          "type": "named"
        },
        {
          "name": "FractionInput",
          "type": "named"
        },
        {
          "name": "DecimalInput",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "MathInput",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "FractionInput",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "DecimalInput",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "insertMathSymbol",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleChange",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, lucide-react"
        }
      ]
    },
    {
      "path": "src\\components\\math\\MathRenderer.tsx",
      "type": "other",
      "lines": 122,
      "size": 3966,
      "imports": [
        "react"
      ],
      "exports": [
        {
          "name": "MathRenderer",
          "type": "named"
        },
        {
          "name": "InlineMath",
          "type": "named"
        },
        {
          "name": "DisplayMath",
          "type": "named"
        },
        {
          "name": "MathText",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "MathRenderer",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "processLatexContent",
          "type": "function",
          "async": true,
          "exported": false
        },
        {
          "name": "InlineMath",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "DisplayMath",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "MathText",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "renderMath",
          "type": "arrow",
          "async": true,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "MathRenderer",
          "exported": true
        },
        {
          "name": "InlineMath",
          "exported": true
        },
        {
          "name": "DisplayMath",
          "exported": true
        },
        {
          "name": "MathText",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useEffect",
        "useRef"
      ],
      "issues": [
        {
          "type": "security",
          "description": "Potential XSS with innerHTML"
        },
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react"
        }
      ]
    },
    {
      "path": "src\\components\\practice\\DiagramDisplay.tsx",
      "type": "other",
      "lines": 62,
      "size": 1959,
      "imports": [
        "@/services/diagramService"
      ],
      "exports": [
        {
          "name": "DiagramDisplay",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "DiagramDisplay",
          "type": "function",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "DiagramDisplay",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/services/diagramService"
        }
      ]
    },
    {
      "path": "src\\components\\practice\\ExamPractice.tsx",
      "type": "other",
      "lines": 254,
      "size": 9767,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "next/link",
        "@/components/practice/PracticeSession",
        "@/constants/examConfig",
        "@/utils/clientErrorHandler",
        "@/types"
      ],
      "exports": [
        {
          "name": "ExamPractice",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "ExamPractice",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "fetchAvailableYears",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "fetchQuestionsByYear",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "handlePracticeComplete",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleBackToPractice",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "ExamPractice",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/badge, lucide-react, next/link, @/utils/clientErrorHandler, @/types"
        }
      ]
    },
    {
      "path": "src\\components\\practice\\PracticeSession.tsx",
      "type": "other",
      "lines": 484,
      "size": 17381,
      "imports": [
        "react",
        "./QuestionCard",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "lucide-react",
        "@/types",
        "./QuestionTracker"
      ],
      "exports": [
        {
          "name": "PracticeSession",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "PracticeSession",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "handleQuestionSelect",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleToggleFlag",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleAnswer",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "handleNext",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handlePrevious",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleSkip",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleDeleteQuestion",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "handleEditQuestion",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleSaveEdit",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "handleCancelEdit",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "calculateStats",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "PracticeSession",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/badge, lucide-react, @/types"
        }
      ]
    },
    {
      "path": "src\\components\\practice\\QuestionCard.tsx",
      "type": "other",
      "lines": 413,
      "size": 16948,
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "lucide-react",
        "react",
        "@/hooks/useImageGenerator",
        "@/utils/textCleanup",
        "@/utils/timeUtils",
        "@/types",
        "./DiagramDisplay",
        "./SolutionVisualizer",
        "@/components/ErrorReport"
      ],
      "exports": [],
      "functions": [
        {
          "name": "QuestionCard",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "handleSubmit",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getCorrectAnswer",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "isCorrect",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "QuestionCard",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useCallback"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/badge, @/components/ui/textarea, lucide-react, @/utils/textCleanup, @/utils/timeUtils, @/types"
        }
      ]
    },
    {
      "path": "src\\components\\practice\\QuestionTracker.tsx",
      "type": "other",
      "lines": 209,
      "size": 6732,
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        {
          "name": "QuestionStatus",
          "type": "named"
        },
        {
          "name": "QuestionTracker",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "QuestionTracker",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "getQuestionIcon",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getQuestionColor",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getStatusCounts",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "QuestionTracker",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/badge, @/components/ui/button, lucide-react"
        }
      ]
    },
    {
      "path": "src\\components\\practice\\RetrySessionManager.tsx",
      "type": "other",
      "lines": 375,
      "size": 14308,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/input",
        "lucide-react",
        "./PracticeSession",
        "@/types"
      ],
      "exports": [
        {
          "name": "RetrySessionManager",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "RetrySessionManager",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "applyFilters",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "clearFilters",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "startRetrySession",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "handleSessionComplete",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "RetrySessionManager",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/badge, @/components/ui/input, lucide-react, @/types"
        }
      ]
    },
    {
      "path": "src\\components\\practice\\SolutionVisualizer.tsx",
      "type": "other",
      "lines": 237,
      "size": 8617,
      "imports": [
        "react",
        "@/services/diagramService"
      ],
      "exports": [
        {
          "name": "SolutionVisualizer",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "SolutionVisualizer",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "generateStepByStepDiagram",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "generateMiniDiagramForStep",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "generateInsightsVisualization",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "generateTimeVisualization",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "SolutionVisualizer",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react, @/services/diagramService"
        }
      ]
    },
    {
      "path": "src\\components\\practice\\TimedChallenge.tsx",
      "type": "other",
      "lines": 326,
      "size": 10972,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "lucide-react",
        "./QuestionCard",
        "@/types",
        "@/utils/timeUtils"
      ],
      "exports": [
        {
          "name": "TimedChallenge",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "TimedChallenge",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "fetchQuestions",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "startChallenge",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "handleAnswer",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "finishChallenge",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getTimeColor",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "TimedChallenge",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect",
        "useRef"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/badge, lucide-react, @/types, @/utils/timeUtils"
        }
      ]
    },
    {
      "path": "src\\components\\quality\\QualityDashboard.tsx",
      "type": "other",
      "lines": 379,
      "size": 14032,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/select",
        "lucide-react"
      ],
      "exports": [
        {
          "name": "QualityDashboard",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "QualityDashboard",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "fetchDashboardData",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "fetchMetrics",
          "type": "arrow",
          "async": true,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "QualityDashboard",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, @/components/ui/badge, @/components/ui/progress, lucide-react"
        }
      ]
    },
    {
      "path": "src\\components\\RecentActivity.tsx",
      "type": "other",
      "lines": 117,
      "size": 3967,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react",
        "next/navigation"
      ],
      "exports": [
        {
          "name": "RecentActivity",
          "type": "default"
        }
      ],
      "functions": [
        {
          "name": "RecentActivity",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "clearActivity",
          "type": "arrow",
          "async": true,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "RecentActivity",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "useState"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/button, lucide-react, next/navigation"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\alert.tsx",
      "type": "other",
      "lines": 59,
      "size": 1583,
      "imports": [
        "react",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react, class-variance-authority, @/lib/utils"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\badge.tsx",
      "type": "other",
      "lines": 36,
      "size": 1127,
      "imports": [
        "react",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [
        {
          "name": "BadgeProps",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "Badge",
          "type": "function",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "Badge",
          "exported": false
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react, class-variance-authority, @/lib/utils"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\button.tsx",
      "type": "other",
      "lines": 56,
      "size": 1834,
      "imports": [
        "react",
        "@radix-ui/react-slot",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [
        {
          "name": "ButtonProps",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @radix-ui/react-slot, class-variance-authority, @/lib/utils"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\card.tsx",
      "type": "other",
      "lines": 79,
      "size": 1876,
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react, @/lib/utils"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\error-display.tsx",
      "type": "other",
      "lines": 150,
      "size": 3755,
      "imports": [
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/lib/utils"
      ],
      "exports": [
        {
          "name": "ErrorDisplay",
          "type": "named"
        },
        {
          "name": "InlineError",
          "type": "named"
        },
        {
          "name": "EmptyState",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "ErrorDisplay",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "InlineError",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "EmptyState",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "getIcon",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getColors",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getColors",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "ErrorDisplay",
          "exported": true
        },
        {
          "name": "InlineError",
          "exported": true
        },
        {
          "name": "EmptyState",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: lucide-react, @/components/ui/button, @/components/ui/card, @/lib/utils"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\input.tsx",
      "type": "other",
      "lines": 25,
      "size": 823,
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [
        {
          "name": "InputProps",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react, @/lib/utils"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\label.tsx",
      "type": "other",
      "lines": 26,
      "size": 723,
      "imports": [
        "react",
        "@radix-ui/react-label",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @radix-ui/react-label, class-variance-authority, @/lib/utils"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\loading.tsx",
      "type": "other",
      "lines": 87,
      "size": 2076,
      "imports": [
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        {
          "name": "Loading",
          "type": "named"
        },
        {
          "name": "LoadingSkeleton",
          "type": "named"
        },
        {
          "name": "LoadingCardSkeleton",
          "type": "named"
        },
        {
          "name": "LoadingButton",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "Loading",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "LoadingSkeleton",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "LoadingCardSkeleton",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "LoadingButton",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "Loading",
          "exported": true
        },
        {
          "name": "LoadingSkeleton",
          "exported": true
        },
        {
          "name": "LoadingCardSkeleton",
          "exported": true
        },
        {
          "name": "LoadingButton",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: lucide-react, @/lib/utils"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\navigation.tsx",
      "type": "other",
      "lines": 95,
      "size": 3408,
      "imports": [
        "next/link",
        "next/navigation",
        "lucide-react"
      ],
      "exports": [
        {
          "name": "Navigation",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "Navigation",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "Navigation",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/link, next/navigation, lucide-react"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\progress-tracker.tsx",
      "type": "other",
      "lines": 98,
      "size": 3326,
      "imports": [
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/badge"
      ],
      "exports": [
        {
          "name": "RoundProgressTracker",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "RoundProgressTracker",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "getRoundStatusBadge",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getProgressMessage",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [
        {
          "name": "RoundProgressTracker",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/components/ui/card, @/components/ui/badge"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\progress.tsx",
      "type": "other",
      "lines": 26,
      "size": 776,
      "imports": [
        "react",
        "@radix-ui/react-progress",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @radix-ui/react-progress, @/lib/utils"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\select.tsx",
      "type": "other",
      "lines": 158,
      "size": 5614,
      "imports": [
        "react",
        "@radix-ui/react-select",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @radix-ui/react-select, lucide-react, @/lib/utils"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\spinner.tsx",
      "type": "other",
      "lines": 33,
      "size": 734,
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        {
          "name": "Spinner",
          "type": "named"
        },
        {
          "name": "LoadingCard",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "Spinner",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "LoadingCard",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [
        {
          "name": "Spinner",
          "exported": true
        },
        {
          "name": "LoadingCard",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/lib/utils"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\tabs.tsx",
      "type": "other",
      "lines": 55,
      "size": 1896,
      "imports": [
        "react",
        "@radix-ui/react-tabs",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @radix-ui/react-tabs, @/lib/utils"
        }
      ]
    },
    {
      "path": "src\\components\\ui\\textarea.tsx",
      "type": "other",
      "lines": 24,
      "size": 771,
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [
        {
          "name": "TextareaProps",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react, @/lib/utils"
        }
      ]
    },
    {
      "path": "src\\constants\\examConfig.ts",
      "type": "other",
      "lines": 71,
      "size": 1625,
      "imports": [],
      "exports": [
        {
          "name": "ExamConfig",
          "type": "named"
        },
        {
          "name": "EXAM_CONFIGS",
          "type": "named"
        },
        {
          "name": "ExamType",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "src\\constants\\examTypes.ts",
      "type": "other",
      "lines": 22,
      "size": 689,
      "imports": [],
      "exports": [
        {
          "name": "LEGACY_EXAM_NAME_MAP",
          "type": "named"
        },
        {
          "name": "VALID_EXAM_TYPES",
          "type": "named"
        },
        {
          "name": "getExamName",
          "type": "named"
        },
        {
          "name": "isValidExamType",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "getExamName",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "isValidExamType",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "src\\constants\\index.ts",
      "type": "other",
      "lines": 88,
      "size": 2460,
      "imports": [],
      "exports": [
        {
          "name": "EXAM_TYPES",
          "type": "named"
        },
        {
          "name": "DIFFICULTY_LEVELS",
          "type": "named"
        },
        {
          "name": "TOPICS",
          "type": "named"
        },
        {
          "name": "API_ROUTES",
          "type": "named"
        },
        {
          "name": "NAVIGATION_ROUTES",
          "type": "named"
        },
        {
          "name": "ERROR_MESSAGES",
          "type": "named"
        },
        {
          "name": "HTTP_STATUS",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [
        {
          "name": "EXAM_TYPES",
          "exported": true
        },
        {
          "name": "DIFFICULTY_LEVELS",
          "exported": true
        },
        {
          "name": "TOPICS",
          "exported": true
        },
        {
          "name": "API_ROUTES",
          "exported": true
        },
        {
          "name": "NAVIGATION_ROUTES",
          "exported": true
        },
        {
          "name": "ERROR_MESSAGES",
          "exported": true
        },
        {
          "name": "HTTP_STATUS",
          "exported": true
        }
      ],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "src\\hooks\\useAnalytics.ts",
      "type": "other",
      "lines": 170,
      "size": 4338,
      "imports": [
        "react"
      ],
      "exports": [
        {
          "name": "useAnalytics",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "useAnalytics",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "fetchAnalytics",
          "type": "arrow",
          "async": true,
          "exported": false
        },
        {
          "name": "refreshAnalytics",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getTopicProgress",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getWeeklyActivity",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getCompetitionBreakdown",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "getRecentAchievements",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [
        {
          "name": "useAnalytics",
          "exported": true
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react"
        }
      ]
    },
    {
      "path": "src\\hooks\\useImageGenerator.ts",
      "type": "other",
      "lines": 76,
      "size": 1812,
      "imports": [
        "react"
      ],
      "exports": [
        {
          "name": "useImageGenerator",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "useImageGenerator",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [
        {
          "name": "useImageGenerator",
          "exported": true
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "useState"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react"
        }
      ]
    },
    {
      "path": "src\\hooks\\useLocalStorage.ts",
      "type": "other",
      "lines": 72,
      "size": 2090,
      "imports": [
        "react"
      ],
      "exports": [
        {
          "name": "useLocalStorage",
          "type": "named"
        },
        {
          "name": "usePracticeProgress",
          "type": "named"
        },
        {
          "name": "useUserPreferences",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "usePracticeProgress",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "useUserPreferences",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "setValue",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [
        {
          "name": "useLocalStorage",
          "exported": true
        },
        {
          "name": "usePracticeProgress",
          "exported": true
        },
        {
          "name": "useUserPreferences",
          "exported": true
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "useState"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react"
        }
      ]
    },
    {
      "path": "src\\hooks\\usePerformanceMonitor.ts",
      "type": "other",
      "lines": 118,
      "size": 3154,
      "imports": [
        "react"
      ],
      "exports": [
        {
          "name": "usePerformanceMonitor",
          "type": "named"
        },
        {
          "name": "useOperationTimer",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "usePerformanceMonitor",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "useOperationTimer",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "incrementComponentCount",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "logMetrics",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "start",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "end",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [
        {
          "name": "usePerformanceMonitor",
          "exported": true
        },
        {
          "name": "useOperationTimer",
          "exported": true
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect",
        "useRef"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react"
        }
      ]
    },
    {
      "path": "src\\hooks\\usePracticeSession.ts",
      "type": "other",
      "lines": 266,
      "size": 7208,
      "imports": [
        "react",
        "@/types"
      ],
      "exports": [
        {
          "name": "usePracticeSession",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "usePracticeSession",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "loadSavedSession",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "saveSession",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "clearSavedSession",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "saveToHistory",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "getSessionHistory",
          "type": "function",
          "async": false,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [
        {
          "name": "usePracticeSession",
          "exported": true
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect",
        "useCallback"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react, @/types"
        }
      ]
    },
    {
      "path": "src\\lib\\dateUtils.ts",
      "type": "other",
      "lines": 38,
      "size": 961,
      "imports": [],
      "exports": [
        {
          "name": "getDaysUntil",
          "type": "named"
        },
        {
          "name": "formatDaysUntil",
          "type": "named"
        },
        {
          "name": "isToday",
          "type": "named"
        },
        {
          "name": "isFuture",
          "type": "named"
        },
        {
          "name": "isPast",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "getDaysUntil",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "formatDaysUntil",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "isToday",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "isFuture",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "isPast",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "src\\lib\\document-processor.ts",
      "type": "other",
      "lines": 332,
      "size": 10674,
      "imports": [
        "mammoth"
      ],
      "exports": [
        {
          "name": "ProcessedQuestion",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "processDocxFile",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "parseQuestionsFromText",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "isAnswerSection",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "createQuestionObject",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "determineTopicFromContent",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "determineSubtopic",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "determineDifficulty",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "getTimeLimit",
          "type": "function",
          "async": false,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "mammoth"
      ],
      "issues": [
        {
          "type": "maintainability",
          "description": "Large function detected (>1000 chars)"
        }
      ]
    },
    {
      "path": "src\\lib\\dynamic-data.ts",
      "type": "other",
      "lines": 100,
      "size": 2318,
      "imports": [
        "@/lib/prisma"
      ],
      "exports": [
        {
          "name": "getExamIcon",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "getDynamicCompetitions",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "getDynamicTopics",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "getCompetitionStats",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "getDynamicData",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "getExamIcon",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": []
    },
    {
      "path": "src\\lib\\imageGenerator.ts",
      "type": "other",
      "lines": 128,
      "size": 3484,
      "imports": [
        "sharp"
      ],
      "exports": [
        {
          "name": "ImageGenerationOptions",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "generateTextImage",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "generateMathImage",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "generateDiagramPlaceholder",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "src\\lib\\prisma.ts",
      "type": "other",
      "lines": 18,
      "size": 495,
      "imports": [
        "@prisma/client"
      ],
      "exports": [
        {
          "name": "prisma",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "createPrismaClient",
          "type": "function",
          "async": false,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "src\\lib\\query-optimization.ts",
      "type": "other",
      "lines": 122,
      "size": 2915,
      "imports": [
        "./prisma"
      ],
      "exports": [
        {
          "name": "optimizedQueries",
          "type": "named"
        },
        {
          "name": "cacheConfig",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": []
    },
    {
      "path": "src\\lib\\statistics.ts",
      "type": "other",
      "lines": 164,
      "size": 4949,
      "imports": [],
      "exports": [
        {
          "name": "SessionResult",
          "type": "named"
        },
        {
          "name": "SessionStats",
          "type": "named"
        },
        {
          "name": "TopicStats",
          "type": "named"
        },
        {
          "name": "StatisticsCalculator",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "src\\lib\\user.ts",
      "type": "other",
      "lines": 195,
      "size": 4719,
      "imports": [
        "react"
      ],
      "exports": [
        {
          "name": "User",
          "type": "named"
        },
        {
          "name": "DEFAULT_USERS",
          "type": "named"
        },
        {
          "name": "userManager",
          "type": "named"
        },
        {
          "name": "useUser",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "useUser",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "handleStorageChange",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "switchUser",
          "type": "arrow",
          "async": false,
          "exported": false
        },
        {
          "name": "updatePreferences",
          "type": "arrow",
          "async": false,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [
        {
          "name": "user",
          "exported": false
        },
        {
          "name": "user",
          "exported": false
        },
        {
          "name": "userManager",
          "exported": true
        },
        {
          "name": "useUser",
          "exported": true
        },
        {
          "name": "user",
          "exported": false
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "useState",
        "useEffect"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: react"
        }
      ]
    },
    {
      "path": "src\\lib\\utils.ts",
      "type": "other",
      "lines": 48,
      "size": 1467,
      "imports": [
        "clsx",
        "tailwind-merge"
      ],
      "exports": [
        {
          "name": "cn",
          "type": "named"
        },
        {
          "name": "formatTime",
          "type": "named"
        },
        {
          "name": "formatDate",
          "type": "named"
        },
        {
          "name": "calculateAccuracy",
          "type": "named"
        },
        {
          "name": "getStrengthLevel",
          "type": "named"
        },
        {
          "name": "getStrengthColor",
          "type": "named"
        },
        {
          "name": "getDifficultyColor",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "cn",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "formatTime",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "formatDate",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "calculateAccuracy",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "getStrengthLevel",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "getStrengthColor",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "getDifficultyColor",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: tailwind-merge"
        }
      ]
    },
    {
      "path": "src\\middleware\\apiWrapper.ts",
      "type": "other",
      "lines": 28,
      "size": 795,
      "imports": [
        "next/server",
        "@/utils/errorHandler"
      ],
      "exports": [
        {
          "name": "withErrorHandling",
          "type": "named"
        },
        {
          "name": "withValidation",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "withErrorHandling",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "withValidation",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "type-safety",
          "description": "Excessive use of 'any' type (3 occurrences)"
        },
        {
          "type": "code-quality",
          "description": "Potentially unused imports: next/server, @/utils/errorHandler"
        }
      ]
    },
    {
      "path": "src\\schemas\\qualityValidation.ts",
      "type": "other",
      "lines": 301,
      "size": 10474,
      "imports": [
        "zod"
      ],
      "exports": [
        {
          "name": "MathExpressionSchema",
          "type": "named"
        },
        {
          "name": "QuestionContentSchema",
          "type": "named"
        },
        {
          "name": "OptionSchema",
          "type": "named"
        },
        {
          "name": "MultipleChoiceSchema",
          "type": "named"
        },
        {
          "name": "SolutionSchema",
          "type": "named"
        },
        {
          "name": "ImageValidationSchema",
          "type": "named"
        },
        {
          "name": "CompleteQuestionSchema",
          "type": "named"
        },
        {
          "name": "AnswerValidationSchema",
          "type": "named"
        },
        {
          "name": "QualityScoreSchema",
          "type": "named"
        },
        {
          "name": "ValidationResultSchema",
          "type": "named"
        },
        {
          "name": "validateMathematicalContent",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "validateMathematicalContent",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: zod"
        }
      ]
    },
    {
      "path": "src\\schemas\\validation.ts",
      "type": "other",
      "lines": 100,
      "size": 3699,
      "imports": [
        "zod",
        "@/constants"
      ],
      "exports": [
        {
          "name": "questionSchema",
          "type": "named"
        },
        {
          "name": "optionSchema",
          "type": "named"
        },
        {
          "name": "createQuestionSchema",
          "type": "named"
        },
        {
          "name": "userAttemptSchema",
          "type": "named"
        },
        {
          "name": "practiceSessionSchema",
          "type": "named"
        },
        {
          "name": "examScheduleSchema",
          "type": "named"
        },
        {
          "name": "questionQuerySchema",
          "type": "named"
        },
        {
          "name": "statsQuerySchema",
          "type": "named"
        },
        {
          "name": "fileUploadSchema",
          "type": "named"
        },
        {
          "name": "QuestionInput",
          "type": "named"
        },
        {
          "name": "CreateQuestionInput",
          "type": "named"
        },
        {
          "name": "UserAttemptInput",
          "type": "named"
        },
        {
          "name": "PracticeSessionInput",
          "type": "named"
        },
        {
          "name": "ExamScheduleInput",
          "type": "named"
        },
        {
          "name": "QuestionQuery",
          "type": "named"
        },
        {
          "name": "StatsQuery",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [
        {
          "name": "userAttemptSchema",
          "exported": true
        }
      ],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: zod, @/constants"
        }
      ]
    },
    {
      "path": "src\\services\\achievementService.ts",
      "type": "other",
      "lines": 304,
      "size": 7975,
      "imports": [
        "@/lib/prisma"
      ],
      "exports": [
        {
          "name": "AchievementTrigger",
          "type": "named"
        },
        {
          "name": "AchievementService",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": []
    },
    {
      "path": "src\\services\\diagramService.ts",
      "type": "other",
      "lines": 657,
      "size": 23350,
      "imports": [
        "katex"
      ],
      "exports": [
        {
          "name": "DiagramService",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "type-safety",
          "description": "Excessive use of 'any' type (3 occurrences)"
        }
      ]
    },
    {
      "path": "src\\services\\index.ts",
      "type": "other",
      "lines": 7,
      "size": 290,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "src\\services\\progressService.ts",
      "type": "other",
      "lines": 420,
      "size": 12332,
      "imports": [
        "@/lib/prisma",
        "@/types"
      ],
      "exports": [
        {
          "name": "ProgressData",
          "type": "named"
        },
        {
          "name": "ProgressStats",
          "type": "named"
        },
        {
          "name": "ProgressService",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [
        {
          "name": "userId",
          "exported": false
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "type-safety",
          "description": "Excessive use of 'any' type (4 occurrences)"
        },
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/types"
        }
      ]
    },
    {
      "path": "src\\services\\qualityValidationService.ts",
      "type": "other",
      "lines": 513,
      "size": 15040,
      "imports": [
        "@/lib/prisma",
        "@/schemas/qualityValidation",
        "@prisma/client"
      ],
      "exports": [
        {
          "name": "QualityIssue",
          "type": "named"
        },
        {
          "name": "ValidationResult",
          "type": "named"
        },
        {
          "name": "QualityMetrics",
          "type": "named"
        },
        {
          "name": "QualityValidationService",
          "type": "named"
        },
        {
          "name": "qualityValidationService",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "type-safety",
          "description": "Excessive use of 'any' type (6 occurrences)"
        },
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @prisma/client"
        }
      ]
    },
    {
      "path": "src\\services\\questionSelectionService.ts",
      "type": "other",
      "lines": 282,
      "size": 9286,
      "imports": [
        "@/lib/prisma"
      ],
      "exports": [
        {
          "name": "QuestionSelectionOptions",
          "type": "named"
        },
        {
          "name": "QuestionRound",
          "type": "named"
        },
        {
          "name": "QuestionSelectionService",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [
        {
          "name": "userAttempts",
          "exported": false
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": []
    },
    {
      "path": "src\\services\\questionService.ts",
      "type": "other",
      "lines": 217,
      "size": 5655,
      "imports": [
        "@/lib/prisma",
        "@/types",
        "@/constants/examTypes",
        "@/utils/questionTransforms"
      ],
      "exports": [
        {
          "name": "QuestionQuery",
          "type": "named"
        },
        {
          "name": "QuestionUpdate",
          "type": "named"
        },
        {
          "name": "QuestionService",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "prisma"
      ],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/types, @/constants/examTypes, @/utils/questionTransforms"
        }
      ]
    },
    {
      "path": "src\\types\\index.ts",
      "type": "other",
      "lines": 183,
      "size": 4113,
      "imports": [],
      "exports": [
        {
          "name": "Question",
          "type": "named"
        },
        {
          "name": "Option",
          "type": "named"
        },
        {
          "name": "Solution",
          "type": "named"
        },
        {
          "name": "UserAttempt",
          "type": "named"
        },
        {
          "name": "PracticeSession",
          "type": "named"
        },
        {
          "name": "RetryQuestion",
          "type": "named"
        },
        {
          "name": "QuestionCounts",
          "type": "named"
        },
        {
          "name": "ProgressData",
          "type": "named"
        },
        {
          "name": "ProgressStats",
          "type": "named"
        },
        {
          "name": "ExamSchedule",
          "type": "named"
        },
        {
          "name": "DifficultyLevel",
          "type": "named"
        },
        {
          "name": "PracticeQuestion",
          "type": "named"
        },
        {
          "name": "ErrorBoundaryState",
          "type": "named"
        },
        {
          "name": "ApiResponse",
          "type": "named"
        }
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "src\\utils\\clientErrorHandler.ts",
      "type": "other",
      "lines": 92,
      "size": 2378,
      "imports": [
        "@/constants"
      ],
      "exports": [
        {
          "name": "ApiError",
          "type": "named"
        },
        {
          "name": "ClientError",
          "type": "named"
        },
        {
          "name": "handleClientError",
          "type": "named"
        },
        {
          "name": "showErrorToast",
          "type": "named"
        },
        {
          "name": "showSuccessToast",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "handleApiResponse",
          "type": "function",
          "async": true,
          "exported": true
        },
        {
          "name": "handleClientError",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "showErrorToast",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "showSuccessToast",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "apiRequest",
          "type": "function",
          "async": true,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "type-safety",
          "description": "Excessive use of 'any' type (3 occurrences)"
        },
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/constants"
        }
      ]
    },
    {
      "path": "src\\utils\\errorHandler.ts",
      "type": "other",
      "lines": 84,
      "size": 2447,
      "imports": [
        "next/server",
        "zod",
        "@/constants",
        "@/types"
      ],
      "exports": [
        {
          "name": "AppError",
          "type": "named"
        },
        {
          "name": "handleApiError",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "handleApiError",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "handlePrismaError",
          "type": "function",
          "async": false,
          "exported": false
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "code-quality",
          "description": "Potentially unused imports: zod, @/constants, @/types"
        }
      ]
    },
    {
      "path": "src\\utils\\memoryLeakDetector.ts",
      "type": "other",
      "lines": 183,
      "size": 5616,
      "imports": [],
      "exports": [
        {
          "name": "memoryLeakDetector",
          "type": "named"
        },
        {
          "name": "useMemoryTracking",
          "type": "named"
        },
        {
          "name": "checkMemoryUsage",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "useMemoryTracking",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "checkMemoryUsage",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [
        {
          "name": "useMemoryTracking",
          "exported": true
        },
        {
          "name": "usedMB",
          "exported": false
        }
      ],
      "apiMethods": [],
      "dependencies": [
        "useEffect",
        "useMemo"
      ],
      "issues": [
        {
          "type": "memory-leak",
          "description": "setTimeout in useEffect without cleanup"
        }
      ]
    },
    {
      "path": "src\\utils\\nullSafety.ts",
      "type": "other",
      "lines": 41,
      "size": 1295,
      "imports": [],
      "exports": [
        {
          "name": "safeUrlParam",
          "type": "named"
        },
        {
          "name": "safeUrlParamNumber",
          "type": "named"
        },
        {
          "name": "createSafeWhere",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "isNullish",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "safeNumber",
          "type": "function",
          "async": false,
          "exported": false
        },
        {
          "name": "safeUrlParam",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "safeUrlParamNumber",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "createSafeWhere",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "src\\utils\\questionTransforms.ts",
      "type": "other",
      "lines": 82,
      "size": 3087,
      "imports": [
        "@/types"
      ],
      "exports": [
        {
          "name": "transformQuestion",
          "type": "named"
        },
        {
          "name": "transformQuestions",
          "type": "named"
        },
        {
          "name": "transformQuestionForPractice",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "transformQuestion",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "transformQuestions",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "transformQuestionForPractice",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": [
        {
          "type": "type-safety",
          "description": "Excessive use of 'any' type (6 occurrences)"
        },
        {
          "type": "maintainability",
          "description": "Large function detected (>1000 chars)"
        },
        {
          "type": "code-quality",
          "description": "Potentially unused imports: @/types"
        }
      ]
    },
    {
      "path": "src\\utils\\textCleanup.ts",
      "type": "other",
      "lines": 219,
      "size": 6134,
      "imports": [],
      "exports": [
        {
          "name": "cleanupQuestionText",
          "type": "named"
        },
        {
          "name": "cleanupOptionText",
          "type": "named"
        },
        {
          "name": "cleanupSolutionText",
          "type": "named"
        },
        {
          "name": "batchCleanupText",
          "type": "named"
        },
        {
          "name": "needsCleanup",
          "type": "named"
        },
        {
          "name": "getCleanupStats",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "cleanupQuestionText",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "cleanupOptionText",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "cleanupSolutionText",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "batchCleanupText",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "needsCleanup",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "getCleanupStats",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "src\\utils\\timeUtils.ts",
      "type": "other",
      "lines": 42,
      "size": 1106,
      "imports": [],
      "exports": [
        {
          "name": "formatTime",
          "type": "named"
        },
        {
          "name": "formatDuration",
          "type": "named"
        },
        {
          "name": "formatTimeRemaining",
          "type": "named"
        },
        {
          "name": "parseTimeToSeconds",
          "type": "named"
        }
      ],
      "functions": [
        {
          "name": "formatTime",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "formatDuration",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "formatTimeRemaining",
          "type": "function",
          "async": false,
          "exported": true
        },
        {
          "name": "parseTimeToSeconds",
          "type": "function",
          "async": false,
          "exported": true
        }
      ],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "prisma\\schema.prisma",
      "type": "other",
      "lines": 335,
      "size": 11289,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "next.config.js",
      "type": "other",
      "lines": 32,
      "size": 647,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    },
    {
      "path": "package.json",
      "type": "other",
      "lines": 79,
      "size": 2162,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [
        "mammoth",
        "axios"
      ],
      "issues": []
    },
    {
      "path": "tsconfig.json",
      "type": "other",
      "lines": 41,
      "size": 1123,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "apiMethods": [],
      "dependencies": [],
      "issues": []
    }
  ]
}