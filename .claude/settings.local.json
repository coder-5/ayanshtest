{
  "permissions": {
    "allow": [
      "Bash(curl:*)",
      "Bash(PGPASSWORD=postgres psql -U postgres -h localhost -d ayansh_math_prep -c \"SELECT id, \"\"userId\"\", \"\"sessionType\"\", \"\"startedAt\"\" FROM practice_sessions ORDER BY \"\"startedAt\"\" DESC LIMIT 5;\")",
      "Bash(PGPASSWORD=postgres psql -U postgres -h localhost -d ayansh_math_prep -c \"SELECT q.id, COUNT(o.id) as total_options, COUNT(CASE WHEN o.\"\"isCorrect\"\" = true THEN 1 END) as correct_options FROM questions q LEFT JOIN options o ON q.id = o.\"\"questionId\"\" WHERE q.\"\"deletedAt\"\" IS NULL GROUP BY q.id;\")",
      "Bash(npm install:*)",
      "Bash(npx tsc:*)",
      "Bash(taskkill:*)",
      "Bash(npm run backup:*)",
      "Bash(dir:*)",
      "Bash(npm run seed:user:*)",
      "Bash(npm run seed:achievements:*)",
      "Bash(npm run build:*)",
      "Bash(PGPASSWORD=postgres psql -U postgres -h localhost -d ayansh_math_prep -c \"\\dt\")",
      "Bash(PGPASSWORD=postgres psql -U postgres -h localhost -d ayansh_math_prep -c \"SELECT COUNT(*) as questions FROM questions WHERE \"\"deletedAt\"\" IS NULL;\")",
      "Bash(PGPASSWORD=postgres psql -U postgres -h localhost -d ayansh_math_prep -c \"SELECT COUNT(*) as achievements FROM achievements;\")",
      "Bash(PGPASSWORD=postgres psql -U postgres -h localhost -d ayansh_math_prep -c \"SELECT id, name, email FROM users;\")",
      "Bash(PGPASSWORD=postgres psql:*)",
      "WebFetch(domain:artofproblemsolving.com)",
      "Bash(npm run dev:*)",
      "Bash(npx kill-port:*)",
      "Bash(npx tsx:*)",
      "Bash(start http://localhost:3004)",
      "Bash(npx prisma migrate dev:*)",
      "Bash(npx prisma generate:*)",
      "Bash(timeout:*)",
      "Bash(findstr:*)",
      "Bash(npm run lint)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Read(//c/Users/vihaa/**)",
      "Bash(node:*)",
      "Bash(awk:*)",
      "Bash(npm run lint:*)",
      "Bash(cat:*)",
      "Bash(tee:*)",
      "Bash(tree:*)",
      "Bash(npx prisma:*)",
      "Bash(python:*)",
      "Bash(xargs:*)",
      "Bash(for year in \"2018-2019\" \"2019-2020\" \"2021-2022\" \"2022-2023\")",
      "Bash(do cp \"/c/Users/vihaa/Downloads/zip - MOEMS Division E Practice Packet 1998 - 2023 - ALL FILES IN ONE ZIP FILE/zip - MOEMS Division E Practice Packet 1998 - 2023 - ALL FILES IN ONE ZIP FILE/MOEMS Division E Practice Packet $year.pdf\" moems-pdfs/)",
      "Bash(done)",
      "Read(//c/**)",
      "WebFetch(domain:live.poshenloh.com)",
      "WebSearch",
      "WebFetch(domain:ivyleaguecenter.org)",
      "Bash(ls:*)",
      "Bash(npm run import:moems-2006-2007:*)",
      "Bash(start http://localhost:3000/practice/quick?examName=MOEMS+Division+E&examYear=2007)",
      "Bash(start http://localhost:3000/clear-storage.html)",
      "Bash(md5sum:*)",
      "Bash(start web-app/public/images/questions/moems-2006-2007-2A.png)",
      "Bash(start http://localhost:3000/images/questions/moems-2012-2013-2A.png)",
      "Bash(git checkout:*)",
      "Bash(git restore:*)",
      "Bash(for file in scripts/scrape-amc8-bulletproof.ts scripts/scrape-amc8-foolproof.ts scripts/scrape-amc8-ultimate.ts scripts/scrape-universal.ts extract-moems-diagrams.py extract-moems-diagrams-improved.py extract-diagrams-universal.py)",
      "Bash(git rm:*)",
      "Bash(where:*)",
      "Bash(winget install:*)",
      "Bash(\"C:/Program Files/Tesseract-OCR/tesseract.exe\" --version)",
      "Bash(tesseract:*)",
      "Bash(npm run:*)",
      "Bash(npx next build:*)",
      "Bash(find:*)",
      "Bash(test:*)",
      "Bash(git log:*)",
      "Bash(for file in scrape-universal.ts scrape-amc8-ultimate.ts extract-moems-questions.ts extract-moems-2018-2023.ts extract-from-pdf.ts advanced-extraction.ts complete-moems-rescan.ts extract-moems-remaining-comprehensive.ts)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(npx @sentry/wizard@latest:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm test)",
      "Bash(npx @next/codemod@canary next-lint-to-eslint-cli:*)",
      "Bash(npm view:*)",
      "Bash(del:*)",
      "Bash(git ls-tree:*)",
      "Bash(start http://localhost:3000)",
      "Bash(killall:*)",
      "Bash(rm:*)",
      "Bash(npx eslint:*)",
      "Bash(sort:*)",
      "Bash(start http://localhost:3000/library/add)",
      "Bash(start \"C:\\Users\\vihaa\\Downloads\\MathCON Grade 5 - Combined Files.pdf\")",
      "Bash(start ocr-debug-images/page-3-original.png)",
      "Bash(netstat:*)",
      "Bash(pip install:*)",
      "Bash(\"C:\\Program Files\\Tesseract-OCR\\tesseract.exe\" --version)",
      "Bash(unzip:*)",
      "Bash(pkill:*)",
      "Bash(npx next lint:*)",
      "Bash(npx husky init:*)",
      "Bash(npm test:*)",
      "Bash(npx prettier:*)",
      "Bash(npm outdated)",
      "Bash(git reset:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then)",
      "Bash(fi)",
      "Bash(if grep -q \"withErrorHandler\" \"$file\")",
      "Bash(echo:*)",
      "Bash(else)",
      "Bash(do echo \"❌ $file\")",
      "Bash(npm why:*)",
      "Bash(do if [ -f \"app/api/$route/route.ts\" ])",
      "Bash(then echo \"✓ /api/$route\")",
      "Bash(else echo \"✗ /api/$route - MISSING\")",
      "Bash(git show:*)"
    ],
    "deny": [],
    "ask": []
  }
}
